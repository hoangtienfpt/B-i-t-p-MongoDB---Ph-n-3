<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
  <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.3/dist/jquery.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
  <title>Document</title>
</head>

<body>


  <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal1"
    data-whatever="@mdo">Thêm Quần Aó</button>

  <nav class="navbar bg-body-tertiary">
    <div class="container-fluid">

        <input class="form-control me-2" type="search" id="myInput" onkeyup="myFunction()" placeholder="Search" aria-label="Search">
     
<div class="dropdown">
  <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
    Dropdown
  </button>
  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="margin: 20px;">
  <p><button onclick="sortTable()" class="btn btn-primary">
Sort up</button></p>
   <p><button onclick="sort()" class="btn btn-success">
descending sort</button></p>

  </div>
</div>
    </div>
  </nav>
  <div class="modal fade" id="exampleModal1" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel1"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">New Quần Aó</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form action="/add" method="POST">
                      <div class="form-group">
              <label for="Name">Ma Sản Phẩm</label>
              <input type="text" class="form-control" id="masp" placeholder="Mã Sản Phẩm" name="masp">
              <div style="color: red; font-size: 12px; margin: 10px; display: none;" id="divmasp" >không được để trống masp</div>

            </div>
            <div class="form-group">
              <label for="Name">Name</label>
              <input type="text" class="form-control" id="name" placeholder="Enter Your Name" name="name">
               <div style="color: red; font-size: 12px; margin: 10px; display: none;" id="divname">không được để trống name</div>

            </div>
            <div class="form-group">
              <label for="Adress">Img</label>
              <input type="text" class="form-control" id="img" placeholder="Link Anh" name="img">
               <div style="color: red; font-size: 12px; margin: 10px; display: none;" id="divimg">không được để trống img</div>
            </div>
            <div class="form-group">
              <label for="Salary">Quantity</label>
              <input type="number" class="form-control" id="quantity" placeholder="số lượng" name="quantity">
               <div style="color: red; font-size: 12px; margin: 10px; display: none;" id="divquantity">số lượng phải lớn hơn 0</div>
            </div>
            <div class="form-group">
              <label for="Salary">Gía</label>
              <input type="number" class="form-control" id="cost" placeholder="Gía Bán" name="cost">
               <div style="color: red; font-size: 12px; margin: 10px; display: none;" id="divcost">giá phải lớn hơn 0</div>
            </div>
        </div>


        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary" id="btnsubmit">Send message</button>
        </div>
        </form>


      </div>

    </div>
  </div>
  </div>

  <table class="table table-hover" id="myTable">
    <thead>
      <tr>
        <th>STT</th>
        <th>Name</th>
        <th>Img</th>
        <th>quantity</th>
        <th>cost</th>
        <th>Select</th>
      </tr>
    </thead>
    <tbody>
      {{#each quanaos}}
      <tr>
        <td>{{sum @index 1}}</td>
        <td>{{this.name}}</td>
        <td><img src="{{this.img}}" alt="" style="width: 60px; height: 60px;"></td>
        <td>{{this.quantity}}</td>
        <td>{{this.cost}}</td>
        <td><!-- Button trigger modal -->
          <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#deletenhanvienmodel"
            data-id="{{this._id}}">
            xóa
          </button>

          <!-- Modal -->
          <div class="modal fade" id="deletenhanvienmodel" tabindex="-1" role="dialog"
            aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                  </button>
                </div>
                <div class="modal-body">
                  bạn có chắc sẽ xóa bản ghi này?
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                  <button type="button" class="btn btn-primary" id="btndeletenhanvien">Yes</button>
                </div>
              </div>
            </div>
          </div>
          <button type="button" class="btn btn-warning"><a href="/{{this._id}}">sua</a></button>




          {{!-- <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog"
            aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="exampleModalLabel">Edit Nhan vien</h5>
                  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                  </button>
                </div>
                <div class="modal-body">
                  <form action="/{{this._id}}" method="get">
                    <div class="form-group">
                      <label for="Name">Name</label>
                      <input type="text" class="form-control" id="Name" placeholder="Enter Your Name" name="name">

                    </div>
                    <div class="form-group">
                      <label for="Adress">Adress</label>
                      <input type="text" class="form-control" id="Adress" placeholder="Adress" name="adress">
                    </div>
                    <div class="form-group">
                      <label for="Salary">Salary</label>
                      <input type="number" class="form-control" id="Salry" placeholder="Salary" name="salary">
                    </div>

                    <div class="modal-footer">
                      <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                      <button type="submit" class="btn btn-primary">Edit</button>
                    </div>
                  </form>
                </div>

              </div>
            </div>
          </div> --}}


        </td>
      </tr>
      {{/each}}


    </tbody>
  </table>
  <form method="post" name="delete_staff"></form>

</body>

</html>
<script>
  var id
  $('#deletenhanvienmodel').on('show.bs.modal', function (event) {
    var button = $(event.relatedTarget)
    id = button.data('id')
    console.log(id)

  })

  var deleteform = document.forms['delete_staff']
  console.log(deleteform)
  var btndeleteid = document.getElementById('btndeletenhanvien')
  btndeleteid.onclick = function () {
    deleteform.action = `/${id}/delete?_method=DELETE`

    deleteform.submit();
    console.log('thành côn')
  }
  var btnsubmit = document.getElementById('btnsubmit')
   btnsubmit.onclick = function () {
     var masp = document.getElementById('masp')
    var  name= document.getElementById('name')
    var img = document.getElementById('img')
    var quantity = document.getElementById('quantity')

    var cost = document.getElementById('cost')
    var divmasp = document.getElementById('divmasp')
    var  divname= document.getElementById('divname')
    var divimg = document.getElementById('divimg')

    var divcost = document.getElementById('divcost')
    var divquantity = document.getElementById('divquantity')


    var divcost = document.getElementById('divcost')
    var actionform = document.getElementById('form')

      if ( name.value.length == 0) {
     divname.style.display='inline-block'
    } if(masp.value.length==0){
       divmasp.style.display='block'
    } 
     if(img.value.length==0){
         divimg.style.display='block'
    } 
     if(quantity.value<=0){
         divquantity.style.display='block'
    }
     if(cost.value<=0){
        divcost.style.display='block'
    } 

    else {
      btnsubmit.type = "submit"
    }
  }

function myFunction() {
  // Declare variables
  var input, filter, table, tr, td, i, txtValue;
  input = document.getElementById("myInput");
  filter = input.value.toUpperCase();
  table = document.getElementById("myTable");
  tr = table.getElementsByTagName("tr");

  // Loop through all table rows, and hide those who don't match the search query
  for (i = 0; i < tr.length; i++) {
    td = tr[i].getElementsByTagName("td")[1];
    if (td) {
      txtValue = td.textContent || td.innerText;
      if (txtValue.toUpperCase().indexOf(filter) > -1) {
        tr[i].style.display = "";
      } else {
        tr[i].style.display = "none";
      }
    }
  }
}
function sortTable() {
  var table, rows, switching, i, x, y, shouldSwitch;
  table = document.getElementById("myTable");
  switching = true;
  /* Make a loop that will continue until
  no switching has been done: */
  while (switching) {
    // Start by saying: no switching is done:
    switching = false;
    rows = table.rows;
    /* Loop through all table rows (except the
    first, which contains table headers): */
    for (i = 1; i < (rows.length - 1); i++) {
      // Start by saying there should be no switching:
      shouldSwitch = false;
      /* Get the two elements you want to compare,
      one from current row and one from the next: */
      x = rows[i].getElementsByTagName("TD")[4];
      y = rows[i + 1].getElementsByTagName("TD")[4];
      // Check if the two rows should switch place:
      if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
        // If so, mark as a switch and break the loop:
        shouldSwitch = true;
        break;
      }
    }
    if (shouldSwitch) {
      /* If a switch has been marked, make the switch
      and mark that a switch has been done: */
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
    }
  }
}
function sort() {
  var table, rows, switching, i, x, y, shouldSwitch;
  table = document.getElementById("myTable");
  switching = true;
  /* Make a loop that will continue until
  no switching has been done: */
  while (switching) {
    // Start by saying: no switching is done:
    switching = false;
    rows = table.rows;
    /* Loop through all table rows (except the
    first, which contains table headers): */
    for (i = 1; i < (rows.length - 1); i++) {
      // Start by saying there should be no switching:
      shouldSwitch = false;
      /* Get the two elements you want to compare,
      one from current row and one from the next: */
      x = rows[i].getElementsByTagName("TD")[4];
      y = rows[i + 1].getElementsByTagName("TD")[4];
      // Check if the two rows should switch place:
      if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
        // If so, mark as a switch and break the loop:
        shouldSwitch = true;
        break;
      }
    }
    if (shouldSwitch) {
      /* If a switch has been marked, make the switch
      and mark that a switch has been done: */
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
    }
  }
}
</script>